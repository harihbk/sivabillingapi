"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.textStampOptionsSchema = exports.barcodeStampOptionsSchema = exports.imageStampOptionsSchema = exports.htmlStampOptionsSchema = exports.baseStampOptionsSchema = void 0;
const zod_1 = require("zod");
const typeSchema_1 = require("./typeSchema");
exports.baseStampOptionsSchema = zod_1.z.object({
    horizontalAlignment: typeSchema_1.horizontalAlignmentSchema,
    verticalAlignment: typeSchema_1.verticalAlignmentSchema,
    horizontalOffset: typeSchema_1.lengthSchema.optional(),
    verticalOffset: typeSchema_1.lengthSchema.optional(),
    opacity: zod_1.z
        .number()
        .optional(),
    rotation: zod_1.z
        .number()
        .optional(),
    hyperlink: zod_1.z
        .string()
        .optional(),
    scale: zod_1.z
        .number()
        .optional(),
    behindExistingContent: zod_1.z
        .boolean()
        .optional(),
    timeout: zod_1.z
        .number()
        .optional(),
    renderDelay: zod_1.z
        .number()
        .optional(),
    maxWidth: typeSchema_1.lengthSchema.optional(),
    maxHeight: typeSchema_1.lengthSchema.optional(),
    minWidth: typeSchema_1.lengthSchema.optional(),
    minHeight: typeSchema_1.lengthSchema.optional()
});
exports.htmlStampOptionsSchema = exports.baseStampOptionsSchema.extend({
    cssMediaType: typeSchema_1.cssMediaTypeSchema.optional()
});
exports.imageStampOptionsSchema = exports.baseStampOptionsSchema;
exports.barcodeStampOptionsSchema = exports.baseStampOptionsSchema.extend({
    widthPx: zod_1.z
        .number()
        .optional(),
    heightPx: zod_1.z
        .number()
        .optional(),
    barcodeType: typeSchema_1.barcodeTypeSchema.optional()
});
exports.textStampOptionsSchema = exports.baseStampOptionsSchema.extend({
    isBold: zod_1.z
        .boolean()
        .optional(),
    isItalic: zod_1.z
        .boolean()
        .optional(),
    isUnderline: zod_1.z
        .boolean()
        .optional(),
    isStrikethrough: zod_1.z
        .boolean()
        .optional(),
    fontFamily: zod_1.z
        .string()
        .optional(),
    fontSize: zod_1.z
        .number()
        .optional(),
    useGoogleFont: zod_1.z
        .boolean()
        .optional(),
    textColor: zod_1.z
        .string()
        .optional(),
    backgroundColor: zod_1.z
        .string()
        .optional()
});
//# sourceMappingURL=stampSchema.js.map