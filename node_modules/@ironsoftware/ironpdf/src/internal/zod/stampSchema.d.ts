import { z } from "zod";
import { BarcodeStampOptions, TextStampOptions } from "../../public/stamp";
export declare const baseStampOptionsSchema: z.ZodObject<{
    horizontalAlignment: z.ZodType<import("../..").HorizontalAlignment, z.ZodTypeDef, import("../..").HorizontalAlignment>;
    verticalAlignment: z.ZodType<import("../..").VerticalAlignment, z.ZodTypeDef, import("../..").VerticalAlignment>;
    horizontalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    verticalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    opacity: z.ZodOptional<z.ZodNumber>;
    rotation: z.ZodOptional<z.ZodNumber>;
    hyperlink: z.ZodOptional<z.ZodString>;
    scale: z.ZodOptional<z.ZodNumber>;
    behindExistingContent: z.ZodOptional<z.ZodBoolean>;
    timeout: z.ZodOptional<z.ZodNumber>;
    renderDelay: z.ZodOptional<z.ZodNumber>;
    maxWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    maxHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
}, "strip", z.ZodTypeAny, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    timeout?: number | undefined;
    renderDelay?: number | undefined;
    maxWidth?: import("../..").Length | undefined;
    maxHeight?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
}, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    timeout?: number | undefined;
    renderDelay?: number | undefined;
    maxWidth?: import("../..").Length | undefined;
    maxHeight?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
}>;
export declare const htmlStampOptionsSchema: z.ZodObject<{
    maxHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    renderDelay: z.ZodOptional<z.ZodNumber>;
    timeout: z.ZodOptional<z.ZodNumber>;
    opacity: z.ZodOptional<z.ZodNumber>;
    rotation: z.ZodOptional<z.ZodNumber>;
    horizontalAlignment: z.ZodType<import("../..").HorizontalAlignment, z.ZodTypeDef, import("../..").HorizontalAlignment>;
    verticalAlignment: z.ZodType<import("../..").VerticalAlignment, z.ZodTypeDef, import("../..").VerticalAlignment>;
    horizontalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    verticalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    maxWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    hyperlink: z.ZodOptional<z.ZodString>;
    scale: z.ZodOptional<z.ZodNumber>;
    behindExistingContent: z.ZodOptional<z.ZodBoolean>;
    cssMediaType: z.ZodOptional<z.ZodType<import("../..").CssMediaType, z.ZodTypeDef, import("../..").CssMediaType>>;
}, "strip", z.ZodTypeAny, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    maxHeight?: import("../..").Length | undefined;
    renderDelay?: number | undefined;
    timeout?: number | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    maxWidth?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    cssMediaType?: import("../..").CssMediaType | undefined;
}, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    maxHeight?: import("../..").Length | undefined;
    renderDelay?: number | undefined;
    timeout?: number | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    maxWidth?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    cssMediaType?: import("../..").CssMediaType | undefined;
}>;
export declare const imageStampOptionsSchema: z.ZodObject<{
    horizontalAlignment: z.ZodType<import("../..").HorizontalAlignment, z.ZodTypeDef, import("../..").HorizontalAlignment>;
    verticalAlignment: z.ZodType<import("../..").VerticalAlignment, z.ZodTypeDef, import("../..").VerticalAlignment>;
    horizontalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    verticalOffset: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    opacity: z.ZodOptional<z.ZodNumber>;
    rotation: z.ZodOptional<z.ZodNumber>;
    hyperlink: z.ZodOptional<z.ZodString>;
    scale: z.ZodOptional<z.ZodNumber>;
    behindExistingContent: z.ZodOptional<z.ZodBoolean>;
    timeout: z.ZodOptional<z.ZodNumber>;
    renderDelay: z.ZodOptional<z.ZodNumber>;
    maxWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    maxHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minWidth: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
    minHeight: z.ZodOptional<z.ZodType<import("../..").Length, z.ZodTypeDef, import("../..").Length>>;
}, "strip", z.ZodTypeAny, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    timeout?: number | undefined;
    renderDelay?: number | undefined;
    maxWidth?: import("../..").Length | undefined;
    maxHeight?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
}, {
    horizontalAlignment: import("../..").HorizontalAlignment;
    verticalAlignment: import("../..").VerticalAlignment;
    horizontalOffset?: import("../..").Length | undefined;
    verticalOffset?: import("../..").Length | undefined;
    opacity?: number | undefined;
    rotation?: number | undefined;
    hyperlink?: string | undefined;
    scale?: number | undefined;
    behindExistingContent?: boolean | undefined;
    timeout?: number | undefined;
    renderDelay?: number | undefined;
    maxWidth?: import("../..").Length | undefined;
    maxHeight?: import("../..").Length | undefined;
    minWidth?: import("../..").Length | undefined;
    minHeight?: import("../..").Length | undefined;
}>;
export declare const barcodeStampOptionsSchema: z.ZodType<BarcodeStampOptions>;
export declare const textStampOptionsSchema: z.ZodType<TextStampOptions>;
//# sourceMappingURL=stampSchema.d.ts.map