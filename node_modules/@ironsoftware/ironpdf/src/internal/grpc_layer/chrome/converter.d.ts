import { AffixFonts, BarcodeStampOptions, BarcodeType, CssMediaType, CustomPaperSize, FitToPaperModes, HorizontalAlignment, HtmlStampOptions, ImageBehavior, ImageStampOptions, Length, MeasurementUnit, PageInfo, PdfPaperSize, PdfPageSelection, PdfPaperOrientation, PdfPassword, TextStampOptions, UseMargins, VerticalAlignment, WaitFor } from "../../../public/types";
import { ChromePdfRenderOptionsP } from "../../generated_proto/ironpdfengineproto/ChromePdfRenderOptionsP";
import { ChromeFitToPaperModesP } from "../../generated_proto/ironpdfengineproto/ChromeFitToPaperModesP";
import { ChromePdfPaperOrientationP } from "../../generated_proto/ironpdfengineproto/ChromePdfPaperOrientationP";
import { ChromePdfCssMediaTypeP } from "../../generated_proto/ironpdfengineproto/ChromePdfCssMediaTypeP";
import { ChromePdfPaperSizeP } from "../../generated_proto/ironpdfengineproto/ChromePdfPaperSizeP";
import { ChromeUseMarginsP } from "../../generated_proto/ironpdfengineproto/ChromeUseMarginsP";
import { ChromeHtmlHeaderFooterP } from "../../generated_proto/ironpdfengineproto/ChromeHtmlHeaderFooterP";
import { ChromeTextHeaderFooterP } from "../../generated_proto/ironpdfengineproto/ChromeTextHeaderFooterP";
import { FontTypeP } from "../../generated_proto/ironpdfengineproto/FontTypeP";
import { ChromeHttpLoginCredentialsP } from "../../generated_proto/ironpdfengineproto/ChromeHttpLoginCredentialsP";
import { PaperSize } from "../../../public/paper";
import { HtmlAffix, TextAffix } from "../../../public/affix";
import { ChromePdfRenderOptions, HttpLoginCredentials } from "../../../public/render";
import { ChromeImageBehaviorP } from "../../generated_proto/ironpdfengineproto/ChromeImageBehaviorP";
import { _ironpdfengineproto_ChromeApplyStampRequestStreamP_InfoP } from "../../generated_proto/ironpdfengineproto/ChromeApplyStampRequestStreamP";
import { LengthP } from "../../generated_proto/ironpdfengineproto/LengthP";
import { MeasurementUnitP } from "../../generated_proto/ironpdfengineproto/MeasurementUnitP";
import { ChromeBarcodeEncodingP } from "../../generated_proto/ironpdfengineproto/ChromeBarcodeEncodingP";
import { VerticalAlignmentP } from "../../generated_proto/ironpdfengineproto/VerticalAlignmentP";
import { HorizontalAlignmentP } from "../../generated_proto/ironpdfengineproto/HorizontalAlignmentP";
export declare function fitToPaperModeToProto(fitToPaperMode?: FitToPaperModes): ChromeFitToPaperModesP | undefined;
export declare function PdfPaperOrientationToProto(pdfPaperOrientation?: PdfPaperOrientation): ChromePdfPaperOrientationP | undefined;
export declare function CssMediaTypeToProto(cssMediaType?: CssMediaType): ChromePdfCssMediaTypeP | undefined;
export declare function httpLoginCredentialsToProto(httpLoginCredentials?: HttpLoginCredentials): ChromeHttpLoginCredentialsP | undefined;
interface WaitForDetail {
    type: number;
    timeout: number;
    networkIdleDuration: number;
    numAllowedInFlight: number;
    renderDelayDuration: number;
    htmlElementQueryStr: string;
}
export declare function convertWaitFor(waitFor: WaitFor | undefined): WaitForDetail;
export declare function chromePdfRenderOptionsToProto(renderOption?: ChromePdfRenderOptions): ChromePdfRenderOptionsP;
export declare function pdfPaperSizeIsCustom(pdfPaperSize: PdfPaperSize): boolean;
export declare function htmlAffixToProto(htmlAffix?: HtmlAffix): ChromeHtmlHeaderFooterP | undefined;
export declare function textAffixToProto(textAffix: TextAffix): ChromeTextHeaderFooterP | undefined;
export declare function fontToProto(affixFonts?: AffixFonts): FontTypeP | undefined;
export declare function useMarginsToProto(useMargins?: UseMargins): ChromeUseMarginsP | undefined;
export declare function paperSizeToProto(paperSize?: PaperSize): ChromePdfPaperSizeP | undefined;
export declare function pdfPaperSizeToProto(pdfPaperSize?: PdfPaperSize): {
    paperSizeP: ChromePdfPaperSizeP;
    widthHeight?: WidthHeight;
} | undefined;
export declare function imageBehaviorToProto(imageBehavior?: ImageBehavior): ChromeImageBehaviorP | undefined;
export declare function customPaperSizeToMm(customPaperSize: CustomPaperSize): WidthHeight;
export type WidthHeight = {
    width: number;
    height: number;
};
export declare function HtmlStampOptionsToProto(id: string, pagesInfo: PageInfo[], password?: PdfPassword, options?: HtmlStampOptions, pageSelection?: PdfPageSelection): _ironpdfengineproto_ChromeApplyStampRequestStreamP_InfoP;
export declare function TextStampOptionsToProto(id: string, pagesInfo: PageInfo[], password?: PdfPassword, options?: TextStampOptions, pageSelection?: PdfPageSelection): _ironpdfengineproto_ChromeApplyStampRequestStreamP_InfoP;
export declare function ImageStampOptionsToProto(id: string, pagesInfo: PageInfo[], password?: PdfPassword, options?: ImageStampOptions, pageSelection?: PdfPageSelection): _ironpdfengineproto_ChromeApplyStampRequestStreamP_InfoP;
export declare function BarcodeStampOptionsToProto(id: string, pagesInfo: PageInfo[], password?: PdfPassword, options?: BarcodeStampOptions, pageSelection?: PdfPageSelection): _ironpdfengineproto_ChromeApplyStampRequestStreamP_InfoP;
export declare function lengthToProto(length?: Length): LengthP | undefined;
export declare function measurementUnitToProto(measurementUnit?: MeasurementUnit): MeasurementUnitP | undefined;
export declare function horizontalAlignmentToProto(horizontalAlignment?: HorizontalAlignment): HorizontalAlignmentP | undefined;
export declare function verticalAlignmentToProto(verticalAlignment?: VerticalAlignment): VerticalAlignmentP | undefined;
export declare function cssMediaTypeToProto(cssMediaType?: CssMediaType): ChromePdfCssMediaTypeP | undefined;
export declare function barcodeTypeToProto(barcodeType?: BarcodeType): ChromeBarcodeEncodingP | undefined;
export {};
//# sourceMappingURL=converter.d.ts.map