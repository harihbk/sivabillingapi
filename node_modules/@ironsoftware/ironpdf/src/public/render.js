"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultChromePdfRenderOptions = exports.WaitForType = void 0;
const paper_1 = require("./paper");
const types_1 = require("./types");
/**
 * A wait-for type. see {@link ChromePdfRenderOptions.waitFor} also {@link WaitFor}
 */
var WaitForType;
(function (WaitForType) {
    WaitForType["PageLoad"] = "PageLoad";
    WaitForType["JavaScript"] = "JavaScript";
    WaitForType["RenderDelay"] = "RenderDelay";
    WaitForType["NetworkIdle0"] = "NetworkIdle0";
    WaitForType["NetworkIdle2"] = "NetworkIdle2";
    WaitForType["NetworkIdleN"] = "NetworkIdleN";
    WaitForType["HtmlElement"] = "HtmlElement";
})(WaitForType = exports.WaitForType || (exports.WaitForType = {}));
function defaultChromePdfRenderOptions() {
    return {
        cssMediaType: types_1.CssMediaType.Print,
        enableJavaScript: true,
        firstPageNumber: 1,
        fitToPaperMode: types_1.FitToPaperModes.Default,
        grayScale: false,
        inputEncoding: "utf-8",
        margin: { default: 0.38, top: 0.39, left: 0.39 },
        paperSize: paper_1.PaperSize.A4,
        paperOrientation: paper_1.PdfPaperOrientation.Portrait,
        printHtmlBackgrounds: true,
        waitFor: { type: WaitForType.RenderDelay, delay: 20 },
        // viewPortWidth: 1280,
        // viewPortHeight: 1024,
        // zoom: 100,
        createPdfFormsFromHtml: true,
        customCssUrl: "",
        useMarginsOnHeaderAndFooter: types_1.UseMargins.All,
    };
}
exports.defaultChromePdfRenderOptions = defaultChromePdfRenderOptions;
//# sourceMappingURL=render.js.map