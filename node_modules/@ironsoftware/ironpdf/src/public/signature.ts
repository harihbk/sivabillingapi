import {CropRectangle} from "./types";

/**
 *  A class that represents a PDF signing certificate (.PFX or .p12) format which can be used to digitally sign a
 *  PDF. This protecting it from alteration.
 */
export interface DigitalSignature {
	/**
	 * Url to use for timestamping
	 */
	timeStampUrl?: string;
	/**
	 * The file path to a .pfx or .p12 digital signing certificate which may be generated using Adobe Acrobat Viewer.
	 */
	certificatePath?: string;
	/**
	 * The file buffer of a .pfx or .p12 digital signing certificate which may be generated using Adobe Acrobat Viewer.
	 */
	certificateBuffer?: Buffer;
	/**
	 * The certificate password as a String
	 */
	certificatePassword?: string;
	/**
	 * The reason the PDF was signed
	 */
	signingReason?: string;
	/**
	 * The physical location the PDF was signed
	 */
	signingLocation?: string;
	/**
	 * The date and time of the digital signature. If left null, the signature will be timestamped at the
	 * millisecond that the PdfDocument is saved to Disk or Stream.
	 */
	signatureDate?: Date;
	/**
	 * A visual image for the sign, often a PNG of a human signature or company stamp.
	 *
	 * This appends a visual signature in addition to  cryptographic signing.
	 */
	signatureImage?: SignatureImage;
}

/**
 * PDF digital signature image data and position
 */
export interface SignatureImage {
	/**
	 * An image file path
	 */
	SignatureImagePath?: string;
	/**
	 * An image binary data
	 */
	SignatureImageBuffer?: Buffer;
	/**
	 * An CropRectangle image position
	 */
	SignatureImagePosition?:CropRectangle;
	/**
	 * 0-based PDF page index
	 */
	SignatureImagePageIndex?: number;
}
